using System.Data;
using Dapper;
using Microsoft.Extensions.Options;
using Npgsql;

namespace XSISDataAccess.Models
{
    public class DataContext
    {
        private readonly DbSettings _dbSettings;

        public DataContext(IOptions<DbSettings> dbSettings)
        {
            _dbSettings = dbSettings.Value;
        }

        public IDbConnection CreateConnection()
        {
            var connectionString = $"Host={_dbSettings.Server}; Database={_dbSettings.Database}; Username={_dbSettings.UserId}; Password={_dbSettings.Password};";
            return new NpgsqlConnection(connectionString);
        }

        public async Task Init()
        {
            await _initDatabase();
            await _initTables();
        }

        private async Task _initDatabase()
        {
            // create database if it doesn't exist
            var connectionString = $"Host={_dbSettings.Server}; Database=postgres; Username={_dbSettings.UserId}; Password={_dbSettings.Password};";
            using var connection = new NpgsqlConnection(connectionString);
            var sqlDbCount = $"SELECT COUNT(*) FROM pg_database WHERE datname = '{_dbSettings.Database}';";
            var dbCount = await connection.ExecuteScalarAsync<int>(sqlDbCount);
            if (dbCount == 0)
            {
                var sql = $"CREATE DATABASE \"{_dbSettings.Database}\"";
                await connection.ExecuteAsync(sql);
            }
        }

        private async Task _initTables()
        {
            // create tables if they don't exist
            using var connection = CreateConnection();
            await _initMovies();

            async Task _initMovies()
            {
                var sql = """
                CREATE TABLE IF NOT EXISTS public.movie
                (
                    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( CYCLE INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
                    title character varying(500) COLLATE pg_catalog."default" NOT NULL,
                    description character varying(1000) COLLATE pg_catalog."default",
                    rating double precision,
                    images character varying(2000) COLLATE pg_catalog."default",
                    created_at timestamp without time zone NOT NULL,
                    updated_at timestamp without time zone,
                    CONSTRAINT movie_pkey PRIMARY KEY (id)
                );
            """;
                await connection.ExecuteAsync(sql);
            }
        }
    }
}
